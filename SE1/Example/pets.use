model myPets

class Person
  attributes
    name : String
    student_id : String
    bank_balance : Integer
end

class PetOwner < Person
	attributes
		vetCost : Integer
	operations
		setVetFor(v : Veterinarian, a : Animal)
		begin
			insert (v, a) into Treats
		end;
		--this can be simplified, i was just understanding the logic
		payVetCost()
		begin
			--declare cost : Integer, vetCost : Integer;
			declare cost : Integer;
			cost := 0;
			--vetCost := 0;
			for pet in self.pets do
				cost := pet.getVetCost();
				self.vetCost := self.vetCost + cost;
			end;
			--self.vetCost := vetCost;
			self.bank_balance := self.bank_balance - self.vetCost
			
		end

end

class Animal
	attributes
		name : String
		age : Integer
		visits_to_vet : Integer
	operations
		getVetCost() : Integer
		begin
			declare b : Integer;
			if self.age < 6 then
				--can just do self.vets.visit_cost, easier
				b := self.vets.getVisitCost(); 
				b := b * self.visits_to_vet;
			else
				b := self.vets.getVisitCost();
				b := b - 2;
				b := b * self.visits_to_vet;
			end;
			result := b;	
		end
		
end

class Cat < Animal
  attributes
    type : String
    hunts : Boolean
end

class Dog < Animal
  attributes
    bark : String
    energetic : Boolean
end


class Veterinarian
	attributes
		name : String
		tel : String
		visit_cost : Integer
	operations
	--delete this
	getVisitCost() : Integer
	begin
		result := self.visit_cost
	end
end

association Owns between
	PetOwner[1] role owner
	Animal [1..*] role pets
end

association Treats between
	Veterinarian[1] role vets
	Animal [*] role clients
	
end



 
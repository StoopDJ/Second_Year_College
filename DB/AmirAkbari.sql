-- Generated by Oracle SQL Developer Data Modeler 19.2.0.182.1216
--   at:        2019-12-02 14:55:22 GMT
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g


-- NAME: AMIR AKBARI
-- STUDNET NUMBER : C18442284

DROP TABLE bill CASCADE CONSTRAINTS;

DROP TABLE branch CASCADE CONSTRAINTS;

DROP TABLE car CASCADE CONSTRAINTS;

DROP TABLE car_usage CASCADE CONSTRAINTS;

DROP TABLE customer CASCADE CONSTRAINTS;

DROP TABLE model CASCADE CONSTRAINTS;

DROP TABLE rent_contract CASCADE CONSTRAINTS;

DROP TABLE sales_rep CASCADE CONSTRAINTS;

DROP TABLE transaction CASCADE CONSTRAINTS;

CREATE TABLE bill (
    bill_id                          NUMBER(10) NOT NULL,
    rent_cost                        NUMBER(10, 2),
    mileage_exceed_charge            NUMBER(10, 2),
    total_cost                       NUMBER(10, 2) NOT NULL,
    car_usage_car_usage_id           NUMBER(10) NOT NULL,
    car_car_registration             VARCHAR2(15) NOT NULL,
    customer_customer_id             NUMBER(10) NOT NULL,
    rent_contract_rent_contract_id   NUMBER(10) NOT NULL
);

CREATE UNIQUE INDEX bill__idx ON
    bill (
        car_usage_car_usage_id
    ASC );

CREATE UNIQUE INDEX bill__idxv1 ON
    bill (
        rent_contract_rent_contract_id
    ASC );

ALTER TABLE bill ADD CONSTRAINT bill_pk PRIMARY KEY ( bill_id );

CREATE TABLE branch (
    branch_id      NUMBER(10) NOT NULL,
    address        VARCHAR2(300 CHAR),
    phone_number   VARCHAR2(20 CHAR)
);

ALTER TABLE branch ADD CONSTRAINT branch_pk PRIMARY KEY ( branch_id );

CREATE TABLE car (
    car_registration   VARCHAR2(15) NOT NULL,
    daily_cost         NUMBER(10, 2),
    fuel_type          CHAR(5 CHAR),
    mileage            FLOAT(7),
    model_model_id     NUMBER(10) NOT NULL
);

ALTER TABLE car
    ADD CHECK ( fuel_type IN (
        'Diesel',
        'Petrol'
    ) );

ALTER TABLE car ADD CONSTRAINT car_pk PRIMARY KEY ( car_registration );

CREATE TABLE car_usage (
    car_usage_id                     NUMBER(10) NOT NULL,
    mileage_at_start                 FLOAT(7),
    mileage_at_end                   FLOAT(7),
    pickup_time                      DATE,
    return_time                      DATE,
    car_car_registration             VARCHAR2(15) NOT NULL,
    rent_contract_rent_contract_id   NUMBER(10) NOT NULL
);

CREATE UNIQUE INDEX car_usage__idx ON
    car_usage (
        rent_contract_rent_contract_id
    ASC );

ALTER TABLE car_usage ADD CONSTRAINT car_usage_pk PRIMARY KEY ( car_usage_id );

CREATE TABLE customer (
    customer_id     NUMBER(10) NOT NULL,
    title           VARCHAR2(4 CHAR) NOT NULL,
    first_name      VARCHAR2(30 CHAR) NOT NULL,
    last_name       VARCHAR2(30 CHAR) NOT NULL,
    address         VARCHAR2(300 CHAR) NOT NULL,
    email           VARCHAR2(60 CHAR) NOT NULL,
    date_of_birth   DATE NOT NULL
);

ALTER TABLE customer ADD CONSTRAINT check_dateofbirth CHECK ( date_of_birth >= '2001-12-4' );

ALTER TABLE customer ADD CONSTRAINT customer_pk PRIMARY KEY ( customer_id );

CREATE TABLE model (
    model_id       NUMBER(10) NOT NULL,
    manufacturer   VARCHAR2(30 CHAR),
    model          VARCHAR2(30 CHAR),
    category       VARCHAR2(30 CHAR)
);

ALTER TABLE model ADD CONSTRAINT model_pk PRIMARY KEY ( model_id );

CREATE TABLE rent_contract (
    rent_contract_id         NUMBER(10) NOT NULL,
    rent_period_start        DATE,
    rent_period_end          DATE,
    fuel_in_tank             NUMBER(3, 1),
    pickup_location          VARCHAR2(300 CHAR),
    return_location          VARCHAR2(300 CHAR),
    customer_customer_id     NUMBER(10) NOT NULL,
    car_car_registration     VARCHAR2(15) NOT NULL,
    sales_rep_sales_rep_id   NUMBER(10) NOT NULL
);

ALTER TABLE rent_contract ADD CONSTRAINT rent_contract_pk PRIMARY KEY ( rent_contract_id );

CREATE TABLE sales_rep (
    sales_rep_id       NUMBER(10) NOT NULL,
    title              VARCHAR2(4 CHAR),
    first_name         VARCHAR2(30 CHAR),
    last_name          VARCHAR2(30 CHAR),
    address            VARCHAR2(300 CHAR),
    phone_number       VARCHAR2(20 CHAR),
    email              VARCHAR2(60 CHAR),
    branch_branch_id   NUMBER(10) NOT NULL
);

ALTER TABLE sales_rep ADD constraint check_email CHECK ( like '%@speedyrentals.com' );
ALTER TABLE sales_rep ADD CONSTRAINT sales_rep_pk PRIMARY KEY ( sales_rep_id );

CREATE TABLE transaction (
    transaction_id                   NUMBER(10) NOT NULL,
    transaction_status               VARCHAR2(30 CHAR),
    time                             DATE,
    sales_rep_sales_rep_id           NUMBER(10) NOT NULL,
    branch_branch_id                 NUMBER(10) NOT NULL,
    rent_contract_rent_contract_id   NUMBER(10) NOT NULL
);

CREATE UNIQUE INDEX transaction__idx ON
    transaction (
        rent_contract_rent_contract_id
    ASC );

ALTER TABLE transaction ADD CONSTRAINT transaction_pk PRIMARY KEY ( transaction_id );

ALTER TABLE bill
    ADD CONSTRAINT bill_car_fk FOREIGN KEY ( car_car_registration )
        REFERENCES car ( car_registration );

ALTER TABLE bill
    ADD CONSTRAINT bill_car_usage_fk FOREIGN KEY ( car_usage_car_usage_id )
        REFERENCES car_usage ( car_usage_id );

ALTER TABLE bill
    ADD CONSTRAINT bill_customer_fk FOREIGN KEY ( customer_customer_id )
        REFERENCES customer ( customer_id );

ALTER TABLE bill
    ADD CONSTRAINT bill_rent_contract_fk FOREIGN KEY ( rent_contract_rent_contract_id )
        REFERENCES rent_contract ( rent_contract_id );

ALTER TABLE car
    ADD CONSTRAINT car_model_fk FOREIGN KEY ( model_model_id )
        REFERENCES model ( model_id );

ALTER TABLE car_usage
    ADD CONSTRAINT car_usage_car_fk FOREIGN KEY ( car_car_registration )
        REFERENCES car ( car_registration );

ALTER TABLE car_usage
    ADD CONSTRAINT car_usage_rent_contract_fk FOREIGN KEY ( rent_contract_rent_contract_id )
        REFERENCES rent_contract ( rent_contract_id );

ALTER TABLE rent_contract
    ADD CONSTRAINT rent_contract_car_fk FOREIGN KEY ( car_car_registration )
        REFERENCES car ( car_registration );

ALTER TABLE rent_contract
    ADD CONSTRAINT rent_contract_customer_fk FOREIGN KEY ( customer_customer_id )
        REFERENCES customer ( customer_id );

ALTER TABLE rent_contract
    ADD CONSTRAINT rent_contract_sales_rep_fk FOREIGN KEY ( sales_rep_sales_rep_id )
        REFERENCES sales_rep ( sales_rep_id );

ALTER TABLE sales_rep
    ADD CONSTRAINT sales_rep_branch_fk FOREIGN KEY ( branch_branch_id )
        REFERENCES branch ( branch_id );

ALTER TABLE transaction
    ADD CONSTRAINT transaction_branch_fk FOREIGN KEY ( branch_branch_id )
        REFERENCES branch ( branch_id );

ALTER TABLE transaction
    ADD CONSTRAINT transaction_rent_contract_fk FOREIGN KEY ( rent_contract_rent_contract_id )
        REFERENCES rent_contract ( rent_contract_id );

ALTER TABLE transaction
    ADD CONSTRAINT transaction_sales_rep_fk FOREIGN KEY ( sales_rep_sales_rep_id )
        REFERENCES sales_rep ( sales_rep_id );



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                             9
-- CREATE INDEX                             4
-- ALTER TABLE                             26
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           0
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0


--Inserting data into tables--

--Inserting data into bill table--

INSERT INTO bill( bill_id, rent_cost, mileage_exceed_charge, total_cost)
VALUES(20,); 
INSERT INTO bill( bill_id, rent_cost, mileage_exceed_charge, total_cost)
VALUES(21,); 
INSERT INTO bill( bill_id, rent_cost, mileage_exceed_charge, total_cost)
VALUES(22,); 
INSERT INTO bill( bill_id, rent_cost, mileage_exceed_charge, total_cost)
VALUES(23,); 
INSERT INTO bill( bill_id, rent_cost, mileage_exceed_charge, total_cost)
VALUES(24,); 

--Inserting data into branch table--

INSERT INTO branch(branch_id,address,phone_number) 
VALUES(1, CityCentre , 0948857478);
INSERT INTO branch(branch_id,address,phone_number) 
VALUES(2, Cork , 0942244567);
INSERT INTO branch(branch_id,address,phone_number) 
VALUES(3, Airport , 0945554425);
INSERT INTO branch(branch_id,address,phone_number) 
VALUES(4, Amsterdam , 0332434545);
INSERT INTO branch(branch_id,address,phone_number) 
VALUES(5, Dublin , 0232343434);

--Inserting data into car table--

INSERT INTO car(car_registration, daily_cost, fuel_type, mileage)
VALUES(2001, 30.7, Petrol, 393212);
INSERT INTO car(car_registration, daily_cost, fuel_type, mileage)
VALUES(2002, 40.2, Petrol, 1444134);
INSERT INTO car(car_registration, daily_cost, fuel_type, mileage)
VALUES(2003, 86, Diesel, 645453);
INSERT INTO car(car_registration, daily_cost, fuel_type, mileage)
VALUES(2004, 98, Diesel, 7685);
INSERT INTO car(car_registration, daily_cost, fuel_type, mileage)
VALUES(2005, 101, Petrol, 11152);

--Inserting data into car_usage table--

INSERT INTO car_usage(car_usage__id, mileage_at_start, mileage_at_end, pickup_time, return_time)
VALUES(220,393212, 4000023, 8:00, 7:00);
INSERT INTO car_usage(car_usage__id, mileage_at_start, mileage_at_end, pickup_time, return_time)
VALUES(230,1444134, 1445342, 8:00, 7:00 );
INSERT INTO car_usage(car_usage__id, mileage_at_start, mileage_at_end, pickup_time, return_time)
VALUES(240, 645453, 645222, 8:00, 7:00);
INSERT INTO car_usage(car_usage__id, mileage_at_start, mileage_at_end, pickup_time, return_time)
VALUES(250, 7685, 7889, 8:00, 7:00);
INSERT INTO car_usage(car_usage__id, mileage_at_start, mileage_at_end, pickup_time, return_time)
VALUES(260, 11152, 11272, 8:00, 7:00);


--Inserting data into customer table--

INSERT INTO customer (customer_id, title, first_name, last_name, address, email, date_of_birth)
VALUES(101, MR, ALI, MOHAMMAN, 3211 drivewat rd, alimoh@gmail.com, 12/11/1996);   
INSERT INTO customer (customer_id, title, first_name, last_name, address, email, date_of_birth)
VALUES(102, MR, SEAN, CASEY, 32 coolmine rd, MSEAN@gmail.com, 19/12/1992); 
INSERT INTO customer (customer_id, title, first_name, last_name, address, email, date_of_birth)
VALUES(103, MR, MARIA, MB, 1 towndub rd, MBDARIA@gmail.com, 09/01/1995); 
INSERT INTO customer (customer_id, title, first_name, last_name, address, email, date_of_birth)
VALUES(104, MR, HOSEIN, ALII, 34 rathmines main rd, HALIII@gmail.com, 05/10/1986); 
INSERT INTO customer (customer_id, title, first_name, last_name, address, email, date_of_birth)
VALUES(105, MS, RACHEL, POWER, 3211 drivewat rd, alimoh@gmail.com, 23/08/1976); 

--Inserting data into model table--

INSERT INTO model ( model_id, manufacturer, model, category )
VALUES(30, Toyota, Camry, hatchback );
INSERT INTO model ( model_id, manufacturer, model, category )
VALUES(31, Volkswagen, Golf, hatchback);
INSERT INTO model ( model_id, manufacturer, model, category )
VALUES(32, Hyundai, i20, hatchback );
INSERT INTO model ( model_id, manufacturer, model, category )
VALUES(33, BMW, 5series, Coupe );
INSERT INTO model ( model_id, manufacturer, model, category )
VALUES(34, Ford, EcoSport, MVP );

--Inserting data into rent_contract table--

INSERT INTO rent_contract(rent_contract_id, rent_period_start, rent_period_end, fuel_in_tank, pickup_location, return_location)
VALUES(50, 10/12/2019, 15/12/2019, 600, CityCentre, CityCentre);
INSERT INTO rent_contract(rent_contract_id, rent_period_start, rent_period_end, fuel_in_tank, pickup_location, return_location)
VALUES(51, 11/11/2019, 12/12/2019, 700, CityCentre, CityCentre);
INSERT INTO rent_contract(rent_contract_id, rent_period_start, rent_period_end, fuel_in_tank, pickup_location, return_location)
VALUES(52, 10/12/2019, 11/12/2019, 400, Airport, CityCentre);
INSERT INTO rent_contract(rent_contract_id, rent_period_start, rent_period_end, fuel_in_tank, pickup_location, return_location)
VALUES(53, 01/12/2019, 07/12/2019, 500, Airport, CityCentre);
INSERT INTO rent_contract(rent_contract_id, rent_period_start, rent_period_end, fuel_in_tank, pickup_location, return_location)
VALUES(54, 15/12/2019, 28/12/2019, 900, Airport, Airport);


--Inserting data into sales_rep table--

INSERT INTO sales_rep ( sales_rep_id, title, first_name, last_name, address, phone_number, email)
VALUES(201,MS, Megan,Copper, 28 Dublin rd, 08664334342,MCopper@speedyrentals.com);
INSERT INTO sales_rep ( sales_rep_id, title, first_name, last_name,address, phone_number, email)
VALUES(202,MR, Aaaron,Nolan, 23 Dundrum 08662232321,AAnolan@speedyrentals.com);
INSERT INTO sales_rep ( sales_rep_id, title, first_name, last_name, address, phone_number, email)
VALUES(203,MS, Lisa,Fallin, 32 oldest rd, 0866323342,Ffall@speedyrentals.com);
INSERT INTO sales_rep ( sales_rep_id, title, first_name, last_name, address, phone_number, email)
VALUES(204,MR, alan, kennedy, co.meath rd, 0866567882,alankennedy@speedyrentals.com);
INSERT INTO sales_rep ( sales_rep_id, title, first_name, last_name, address, phone_number, email)
VALUES(205,MR, adam,lovett, 28 terenure oldrd, 0832232456,alovett@speedyrentals.com);

--Inserting data into transaction table--

INSERT INTO transaction (transaction_id, transaction_status)
VALUES(50001,'Verifed');
INSERT INTO transaction (transaction_id, transaction_status)
VALUES(50002,'Verifed');
INSERT INTO transaction (transaction_id, transaction_status)
VALUES(50003,'Verifed');
INSERT INTO transaction (transaction_id, transaction_status)
VALUES(50004,'NOT Verifed' );
INSERT INTO transaction (transaction_id, transaction_status)
VALUES(50005,'Verifed');



--UPDATE--
UPDATE car
SET car.fuel_type = 'Diesel'
where car.car_registration = (
SELECT manufacturer FROM model
WHERE  = 'Volkswagen'
);


--Delete--
DELETE FROM sales_rep
WHERE sales_rep_id =( 
SELECT sales_rep_id FROM sales_rep
WHERE customer_id = (
SELECT customer_id FROM customer WHERE first_name = 'RACHEL')
);

--Select Decode--
SELECT first_name,
DECODE(customer_id, 101, 'ALI',
                    102, 'SEAN',
                    103, 'MARIA',
                    'Gateway') result
FROM customer;

--Inner Join using group--
SELECT first_name "Rep Name",COUNT(rent_contract_id) "Number of item in contract"
FROM rent_contract
INNER JOIN sales_rep USING (sales_rep_id)
GROUP BY first_name, sales_rep_id;


--Inner Join using group and restriction --
SELECT first_name "Customer Name", COUNT(customer_id) "Number of customer "
FROM customer
INNER JOIN sales_rep using(sales_rep_id)
WHERE date_of_birth IS NOT NULL
GROUP BY first_name, sales_rep_id;

--left OUTER join--
SELECT first_name "Rep Name", COUNT(rent_contract) "Number of items contract"
FROM customer
LEFT OUTER JOIN sales_rep ON (customer.sales_rep_id = sales_rep.sales_rep_id)
WHERE sales_rep_id IS NULL
GROUP BY first_name, sales_rep_id;


--right OUTER Join --
SELECT first_name "Customer Name", COUNT(customer_id) "Number of customer "
FROM customer
RIGHT OUTER JOIN sales_rep using(sales_rep_id)
WHERE date_of_birth IS NOT NULL
GROUP BY first_name, sales_rep_id;


--UNION--
SELECT first_name FROM customer
UNION
SELECT first_name FROM sales_rep;


--INTERSECT--
SELECT customer_id
FROM customer
WHERE customer_id > 100
INTERSECT
SELECT car_registration
FROM car
WHERE daily_cost <> 0;

--VIIW--
CREATE VIEW CUSTOMERS NAME AS
SELECT first_name, last_name, address, email
FROM customer
WHERE first_name= "RACHEL";
